   014
   16.03.2020
Растение
живет: 94 такта
потребляет за жизнь: 242 единицы почвы
производит 4 потомков

во время деления переменная all_consumed_food в классе Plant немного просаживается. Должно ли так быть?

Теперь классы Seed и Plant наследуются от класса Being. Сам класс Being мог бы наследоваться от чего-то
более общего, неодушевленного (Thing), а от него и Rot. Полумать надо/ Унификация - круто.

   015
   17.03.2020
год увеличил до 24 дней
срок жизно растения изменил на 4 года. итого 96 дней
растения способны плодиться раз в полгода (12 дней)
Это все ради более круглых цифр (делится на 2, 3, 4, 6)
За время жизни растения поглощают до 163 единиц почвы
Оказаалось, что растения успеют только двух потомков потодить за время жизни. Мало.
Увеличил плодоношение до 4 раз в год.
Почему то создается ощущение, что это не 4 раза в год, а 4 раза за жизнь.
Размножение у растений происходит значительно реже, чем это позволяет период размножения.
Но все таки сокращение периода некоторым образом влияет на скорость размножения. надо выяснить,
почему это происходит.

   016
   18.03.2020
Закон сохранения массы в прошлой и этой верстии совсем не соблюдается. Семена принесли проблемы
Правильое количество и масса семян показывается тольк на следующем ходу. В момент, когда растения
плодоносят, семена в статистику не попадают.
Посмотрел, в версиях без семян закон сохранения массы худо-бедно сохранялся.
При каждом создании семян обЩая масса мира уменьшается на массу новосозданных семян.
Очевидная ошибка. Общая масса уменьшалась, потому что к ней не плюсовалась масса семян.

   017
   18.04.2020
Решил вернуться к ареалу, чтобы отработать не нем некоторые идеи, которы потом надо будет внедрить
в социум. В частности это графический интерфейс с кнопочками и запись информации о симуляции в
базу данных вместо кучи текстовых файлов.
Пока стелал следующее: вынес основные константы в отдельный файл и отказался от конфигурационного
файла. Уж больно замудренно с этим конфигом программа инициализировалась. А как сделать это
прозрачно, я не знаю. А сейчас данные сгруппированы в одном месте и все инициализируется по уму.

На будущее - осовоить поускаение и поднимание объектов на холсте, а то семена все заспамливают и
из-за них не видно растений.
Так же неплохо будет ограничить количество семян на клетку, уж очень их много.

Не нравится мне, что некоторые величины вычисляются по нескольку раз. Нарпимер вычисляется полная
масса растений и гнили для каждой клетки, а потом вычислается полная масса для всего игрового
поля - и тоже идет пробег по всем растениям, а не по клеткам - там ведь уже все вычислено.
От лишних вычислений я избавился.

А так же не нравится что поля (клетки) хранятся в виде двумерного массива. Проще было бы
обрабатывать их просто как список. Точную позицию клетки на игровом поле мне нужно хнать только
для того, чтобы сбрасывать семена в соседние клетки. Да и то, список соседей для каждой клетки
уже определен. Поэтому после первоначальной инициализации клетки можно преобразовать в список.
Или в словарь и обращаться к эдементам - если так нужно - по тексотвому ключу, содержащему
координаты клетки. типа "10 12".

Есть идея. Вместо квадратиков, изображающих растения писать на каждой клетке число растений,
размещенных на ней. Как-то лаконичней будет. Не будет адской каши из семян и гнили. Это
отдельным режимом можно сделать.

   018
   18.04.2020
Переписал базовый класс для растений, теперь он стал более абстрактный. Теперь его наследует и
класс Rot. Базовый класс рисует сущности. А парамерты рисования ему передаются из словаря
cn.DRAW_PARAMS - там для гнили, семян и растений отдельные подсловарики.
Еще сделал так, что отрисовку всего, кроме клеток можно отключить. Работает заметно быстрее.
Это мне нужно для проведения серий опытов с разными параметрами семян.
Еще нужно сделать чекбоксы, чтобы можно было запрещать отрисовку растений, семян и гнили по
отдельности.

   019
   26.04.2020
На данном этапе чекбоксы, указывающие, отрисовывать или нет ту или иную сущность, работают
нормально.
Пытвюсь разобраться с ошибкой, когда гниль внезапно начинает рисоваться зеленым цветом и думает,
что она растение. Это видно на клетках где мало пищи. Светлозеленый сменяется на темнозеленый и
обратно. Ошибка плавающая. Хотя генератор случайных чисел зафиксирован, после рестарта зеленые
точки появляются в самый неожиданный момент. При первом запуске результат повторяется. Тут скорее
всего с памятью какая-то ошибка - что то видимо нерпавильно добавляю или удаляю из словарей.
В память я конечно же не полез, а запилил всплявающие подсказки. Когда наводишь на объект, над
ним появляется подсказка с некоторой информацией об объекте. Так вот для зеленой гнили явно
указывается, что это гниль, а никакое не растение.
На долгом времени симцляции подсказки начинают тормозить. При наведении на объект, они не не
появояются, но вешают окно. При уводе курсора симуляция продолжается. Не знаю, что это такое.
Возможно старые подсказки не удаляются и их список сильно растет. Но это только моя догадка. Если
поставить на паузу, подсказки начинают отображаься с нормальной скоростью (когда дело еще не
дошло до зависаний). Начиная примерно с 19 000 хода подсказки перестают выводиться онлайн. При
остановленной симуляции изрядно тормозят, а потом перестают выводиться вообще. К тому времени
номера объектов на экране находятся в районе 372 000.
Но в целом эта фича нужна только для отладки. В релизе будут подсказки, привязанные к клеткам, а
не к отдельным растениям. При Наведении на клетку будет демонстрироваться, сколько на ней семян,
растений и т. д.
Нормальную отладку затрудняет то, что это графический интерфейс и до многих данных графических
объектов я просто не могу добраться. Да и дебаггер ведет себя странно с tkinter.

Плюс ко всему я и нормальное развитие биома сломал. Это видно по графику, когда вся гниль внезапно
обнуляется, при том что она должна рассасываться очень медленно.
Посмотрел по подсказкам - если растение голодает его вес почему-то не уменьшается. Нужно
исправить.

Нашел ошибку. Свистопляска началась, когда я решил добавить возможность отключения отрисовки
растений, семян и т.д. Дело в том, что когда на холсте создаются объекты, им присваивается
числовой индекс. И обащение к этому объекту осуществляется по индексу (в том числе изменение его
свойств). По этому индексу у меня в словарях объектах идет доступ. А если графический объект не
создается, то надо как-то по другому создавать id объекта. Ну я и стал создавать из глобального
счетчика. Но оказывается, что номер графического объекта на холсте и номер объекта из глобального
счетчика  - это несвязанные величины, они могут пересекаться. Поэтому семена получают незаконный
доступ к растениям, а растения перекрашивают гниль в свой цвет. То есть накладывается отображаемое
и неотображаемое. От этого и симуляция сломалась - когда гниль демонстрировала мгновенное
исчезновение с поля.
Решил проблему тем, что id есть у всех объектов. А у тех, которые должны отображаться есть еще и
gid. Глюки исчезли.

   020
   28.04.2020
Вижу, что все еще много вычислений дублируется. Например куча статистики считается на уровне
клетки, а потом те же вычисления делаются на уровне игрового поля для вычисления глобальной
статистики. Переделал так, что основные вычисления делаются на уровне клетки, а на уровне
игрового поля значнеия, вычисленые для клеток просто суммируются.
Ну и еще не понравилось, что потоянно вычисляется количество растений, гниди и семян на игровом
поле. Раньше это делелось через вычисление длины списка. Сейчас я списки сущностей с глобального
уровня убрал, ибо они дублируются. Вычислять сущности стало труднее. Поэтому я заменил их
глобальными счетчиками. Когда сущность создается, счетчик плюсуется. Когда исчезает - счетчик
уменьшается. Нормальна экономия - хотя бы в коде, если не в производительности. Использование
графического интерфейса и запланированных событий особо экономить не дает. Разве, что вывести
все вычисления в отдельный поток. Но это я не умею.


  021
  29.04.2020
Изменил алгоритм питания растений. Нужно все-таки соблюдать какую-то справедливость при
распределении еды. Раньше было так, кто кто стоит первым в списке, тот получает все. Те растения,
которые стоят в хвосте списка умирают первыми. Тогда я сделал, что каждый ход на каждой клетке
пара случайных растений менялась местами. Из за чего на симуляции получалось сплошное мигание.
Если на клетке мало еды, из-за перемешивания получается так, что сегодня один покушал, завтра
другой, вот они и перекрашиваются каждый ход. В итоге сделал так, что почва, имеющаяся на клетке
делится между растениями поровну. Если кому-то мало - он голодает. Если кто-то не смог съесть сою
пайку полностью - остаток переходит на следующий ход для повторного распределения.
А вот с принципом прорастания семян я справедливости добиться не могу. Ограничился просто
перемешиванием списка семян.

  022
  30.04.2020
Добавил в класс World централизоавнное создание логов, чтобы их можно было легко включать и
отключать. К тому же логам добавил довольно длинные суффиксы, во-первых, чтобы из них можно было
понять параметры симуляции, а во-вторых, чтобы при многочисленных симуляциях старые файлы не
затирались.
Опробовал возможность запускать несколько симуляций одну за другой. Для этого добавил новый файл
run_many_times.py В принципе получается запустить с серию симуляций с разнми значениями одного
параметра, а именно - порог прорастания семени. Если он очень высок, наблюдается интересная картина:
растения первого поколения растут в сытости, а потом вымирают, потому что семечки не прорастают -
почтвы не хватает для прорастания. И толко через некоторе время, когда гниль превратится в почву,
всходит второе поколение. И с третьим то же самое. Чем больше порог прорастания к максимальному
значению почвы, тем длиннее мертвые сезоны. Надо будет понаблюдать на большом промежутке времени,
потому что на первых этапах растения сильно синхронизованы.
Кстати, по поводу синхронизации - когда я ввел новый алгоритм распределения пищи, растения стали
вести себя совершенно одинаково. Им достается одинаковый рацион пищи и они ведут себя как клоны.
Исчез огонек, случайность.

Исправил ошибку, из-за которой семена не превращались в гниль. Ввозраст семечки сравнивался с
предельным возрастом жизни. Видимо это сравнение как то проскакивало мимо равенства. Я заменил
равно на больше. Заработало как надо, но стало гораздо скучнее. Периоды опустошения исчезли.

  024
  добавил кучу всякого, лень вспоминать.


  025
  07.05.2020
  Сделал консольную версию, чтобы быстрее работало. Все равно я серии симуляций на нинуксовом
  компе запускаю из-под ssh, графический режим там только мешает.
  Работать стало раз в 50-100 быстрее. Кайф.

  Для этого я сделал в гите другую ветку "console". Туда и закоммитил. Сейчас вернулся в мастер.
  Посмотрю на раздвоение кода.


028
15.05.2020
Опеределел симуляцию так, чтобы графический интерфейс был полностью отвязан от симулируемого мира.
Теперь класс World не знает о том, кто его запускает. Он может быть запущен как из консоли, так и
из графического режима. Как и классы растений  и клеток не рисуют сами себя. Графический режим является
просто оберткой над класссом симуляции. Конечно класс World пришлось изрядно переделать, он тепеть
собирает некоторую дополнительную информацию. Так как у меня объекты рисуются на игровом поле только
в момент рождения, а удаляются в момент смерти, пришлось добавить списки с объектами, родившимися и
умершими на текущем ходу. Иначе бы пришлось перерисовывать все объекты каждый ход.
На очереди перенос в графическую версию базы данных и других фишек, сделанных в консольной версии.
Сделать слияние веток я, думаю, не смогу, уж сильно в них все по разному.

Сделать:
Исправить координаты объектов. Сделать их физическими, без привязки к экрану. Правда при этом каждый
раз преобразование придется делать. А может быть и вовсе у каждого объекта свой класс-обертка будет,
для отображения в графическом режиме.

029
19.05.2020
Вот вынес я в прошлой версии прорисовку графики в отдельный модуль, и подумал о том, что чистая
консольная версия тепеть не запускается. Потому что модуль graphics помимо вывода графики еще и
конролирует условия окончания симуляции. К тому же он является классом-оберткой для класса World.
То есть для консольного запуска симуляции надо писать консольную обертку.
С одной стороны класс мира похорошел, у него нет даже собственного цикла симуляции - цикл идет в
объемлющем классе. Но с другой стороны он все еще громоздок. Потому что в нем считается статистика
мира, пишутся логи и база данных. Вот я и решил его декомпозировать - над миром сделать небеса. А
уже грфика пусть работает с небесами.
А потом подумал - вроде статистика и лог файлы, это не те задачи, чтобы ставить их выше симуляции.
И вместо обертки надо сделать параллельный класс с другими задачами. Да, статистика и
логирование могут быть параллельными задачами, но обетрка все-таки должна быть. Она должна
инициализировать логи, базу, да и пусть гоняет основной цикл - отслеживание условий окончания
симуляции можно отобрать у класса графики.
Так  можно вообще сделать, чтобы симуляция шла независимым потоком от вывода графики. Симуляция
пишется в базу, а графика проигрывается уже из базы, и можно хронологически туда-сюда перемещаться
по симуляции.
Короче, надо добавить не один класс, а несколько. Статистику, логирование и то, что этим всем
управляет.

030
04.07.2020
Много всего сделал за последнее время. В общем, то, что планировал. Разделил программу на модули.
Теперь она запускается как из консоли, так и с графикой. Отдельные модули отвечают за запись в
базу, логирование и отрисовку. Всем рулит модуль heaven. Его надо запускать из основной программы.
И он в зваисимости от параметров отрабатывает. Графический запуск, консольный запуск, консольный
с множеством прогонов.
Но чувствую на этапе графики лишние словари создаются с объектами, предназначенными для отрисовки
и удаления. Чувствую, их можно на более ранних этапах обрабатывать.
И еще игровые клетки перевел из матрицы в линейный список, чтобы по двойному циклу не бегать.

031
05.07.2020
Убрал лишний словарь из модуля graphics, теперь используется словарь из модуля world. А проблема
была такая... Я ее на 100% не проверял, но мне кажется, что она такая: в клетакх у меня создаются
словари: объекты для рисования и объекты для удаления. Иногда так получается, что объект попадает
в оба словаря. А когда эти словари отправляются в модуль графики на отрисовку, возникает ошибка.
Потому что у меня там работа совершается в следующей последовательности: сначала удаляются
устаревшие объекты, а потом отрисовываются новые. Но если объект попал в оба словаря, то программа
пытается удалить его до того, как он был нарисован. Поэтому я в world удаляю такие объекты из
обоих словарей, рисовать их все равно не надо. Так получается. что они в один ход создаются и тут
же уничтожаются. Как так может быть? Я думаю, это семена, у которых выставлено нулевое время на
прорастание. Если растение породило семя и бросило его в клетку, которая до этого еще не
обрабатывалась, то при обработке данной клетки семя мгновенно прорастет. Если же клетка, в котрую
упало семя была уже обработана, то семя прорастет только на следующем ходу. Вот такое
несовершенство. Надо от него избавляться, добавив запрет на прорастание в течение одного хода,
тогда и ошибка появляться не бутет. и обрабатывать такие специфические случаи не придется.

Еще есть ошибка. Консольная версия перестала работать. Так как в модуле графики требуется
определиться с отрисовкой отдельных видов обьектов. Он просит метод для определения необходимости
отрисовки. А в консольной версии лаунчер у меня не в виде объекта сделан. Надо опрелелиться.
По идее в консольной версии модуль graphics вообще не должен выполняться. Может условный импорт
сделать, так как ошибка происходит не на этапе работы модуля, а на этапе его импорта.

Еще метрики надо сделать. В во время переделки программы я их выпилил, так как они мешали. Ну и
запись метрик в базу. Вывод в таблицы вообще практически не нужен. Графики я сейчас не смотрю,
так что отключил создание таблиц.

032
27.09.2020
Выделил инициацию мира в отдельный класс WCreate. Он вызывается из heaven и возвращает класс
world со сформированной конфигурацией для и ратсений. Добавил в этот класс возможность произвольно
задавать распределение почвы по клеткам. На очереди - возможность задавать первоначальное
распределение растений по клетакам.

033
28.09.2020
Добавил в класс WCreate размещение земли кругами, как сплошной заливкой, так и градиентом от центра
к краям.
Сделать доп таблицу в базе с суммарными массами почвы, растений, семян и гнили на игровом поле (а
можно и на каждой клетке по-отдельности). Потому что доставание этих цифр из базы, а там идет
суммирование по всем объектам, занимает больше времени, чем рассчет нового кадра. То есть
формирование таблиццы на основе базы идет дольше симуляции.

033
28.09.2020
Добавил в классе WCreate три метода заполнения пространства землей:'solid' когда клеткам
присваиваются определенные значения почвы, 'add' когда к старым знасениям почвы добавляются
новые значения, 'blend' когда клеткам присваиваются средние значения между старой и новой
величиной почвы.

034
28.09.2020
Продолжаю разбитаться с генерацией мира.

Неплохо было бы в классе heaven или где-то там добавить возможность вмешиваться в мир.
Например мгновенно убивать все растения или семена. Или чтобы гниль мгновенно превратилась в
почву.

035
28.06.2021
Хочу отказаться от гнили, как от отдельного объета, так как гниль очень много процессорного
времени занимает. Хочу сделать, чтобы гниль была атрибутом полянки. И чтобы у нее был период
полураспада. Чтобы она превращалась в почву в геометрической прогрессии. Есмть много гнили -
идет большой прирост земли. Имало гнили - земля почти не образуется. Например сделать период
полураспалда равный десяти ходам.

Как изменить концепцию гнили безопасно? Она веть очень сильно в код вплетена. Думаю, для начала
нужно отключить возможность образования гнили, а потом аккуратненько вычищать ее из базы данных
и логов. Должно получиться.
Да. В принципе так и получилось. Убрал все вызовы класса Rot, все работает. Тепепрь нужно высе
упоминания гнили как отдельных объектов.

035
28.06.2021
Вычистил Rot из логов, осталось вычистить из базы данных и графического интерфейса. ПРои чем в
графическом интерфейсе мне видятся слудующие вещи: 1) отображение клоичеств ггнилых объектов;
2) высплывающая подсказка с указанием гнилых объектов; учет гнили в базе графических объектов.
Их вообще надо вычистить из файла констант, чтоб по ним перебо р не шел.
И еще из метрики надо гниль убрать, что-то я там намудрил.

036
03.07.2021
Надо вычищать гниль из базы. Вычистил. Теперь она обрабатывается так же, как почва.

Мысли по генетике.
Чтобы растения неперемешивались в кашу, больная часть семян должна сбрасываться в ту же клетку,
где и растения. А это значит, чтобы растения не вымирали мгновенно, нужно чтобы растений на
клетке было больше. При этом самих клеток можно сделать меньше. Получится, что клетки здесь
будут выступать в качестве границ биомов.
Для один из основных параметров, которые должны порождать разнообразие долдна быть скорость
развития. Скорость развития должна в качестве мнодителя участвовать в количестве потребляемой
почвы, скорости роста. Но для равновесия должна отрицательно влиять на длину жизни. Наример
семена с маленькой скоростью могут дольше пролежать в земле без прорастания. Тогда как быстрые
семена ихзрасходуют все питательные вещетства и умрут.
Вот параметры оторые можно заложить в генофонд:
    скорость развития
    стратегия накопления энергии (величина мешка еды на черный день)
    максимальная масса растения
    максимальная площадь растения
    скорость плодоношения
    количество отрбасываемых семян
    масса отбрасываемых семян
    порог взросления (когда можно отбрасывать семена)
    вереятность для семечки перелетеь в соседнюю клетку

С введенем мутаций становится бессмысленно демонстрировать сытая клетка или голодная. Эту
опцию можно булет убрать. Вместо нее внежрить отображение каждого вида своим цветом. Ну и
нужно будет сормулировать, что такое вид, как отличить один вид от другого.

037
03.07.2021
Добавил вероятность перелета семечка в одну из соседних клеток. Потом к этому параметру
надо будет прикрутить ген.
